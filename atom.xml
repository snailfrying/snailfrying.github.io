<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail Life</title>
  <icon>http://yoursite.com/icon.png</icon>
  <subtitle>basketball dance rap</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-30T09:30:12.339Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>snail json</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>chapter2 最小二乘法完整实践理论</title>
    <link href="http://yoursite.com/2019/11/20/chapter2-%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E5%AE%8C%E6%95%B4%E5%AE%9E%E8%B7%B5%E7%90%86%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/11/20/chapter2-最小二乘法完整实践理论/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2019-11-30T09:30:12.339Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;chapter2-最小二乘法完整实践理论&quot;&gt;&lt;a href=&quot;#chapter2-最小二乘法完整实践理论&quot; class=&quot;headerlink&quot; title=&quot;chapter2- 最小二乘法完整实践理论&quot;&gt;&lt;/a&gt;chapter2- 最小二乘法完整实践理论&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h5 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h5&gt;&lt;p&gt;​    此章，通过最小二乘法，在统计学习，机器学习，深度学习的轨道上进行讨论，它们叁之间的共性与异性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;什么是最小二乘法&quot;&gt;&lt;a href=&quot;#什么是最小二乘法&quot; class=&quot;headerlink&quot; title=&quot;什么是最小二乘法&quot;&gt;&lt;/a&gt;什么是最小二乘法&lt;/h5&gt;&lt;p&gt;​    &lt;strong&gt;最小二乘法&lt;/strong&gt;（&lt;strong&gt;least squares method&lt;/strong&gt;），又称&lt;strong&gt;最小平方法&lt;/strong&gt;，是一种&lt;a href=&quot;https://zh.wikipedia.org/wiki/数学&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;数学&lt;/a&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/优化&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;优化&lt;/a&gt;方法。它通过最小化&lt;a href=&quot;https://zh.wikipedia.org/wiki/误差&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;误差&lt;/a&gt;的平方和寻找数据的最佳函数匹配。&lt;/p&gt;
&lt;p&gt;​    利用最小二乘法可以简便地求得未知的数据，并使得这些求得的数据与实际数据之间误差的平方和为最小。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter1-统计学习与深度学习方法概论</title>
    <link href="http://yoursite.com/2019/11/19/chapter1-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%A6%82%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/11/19/chapter1-统计学习与深度学习方法概论/</id>
    <published>2019-11-19T12:13:13.000Z</published>
    <updated>2019-11-20T12:25:32.300Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;chapter1-统计学习方法与深度学习方法概论&quot;&gt;&lt;a href=&quot;#chapter1-统计学习方法与深度学习方法概论&quot; class=&quot;headerlink&quot; title=&quot;chapter1-统计学习方法与深度学习方法概论&quot;&gt;&lt;/a&gt;chapter1-统计学习方法与深度学习方法概论&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h6 id=&quot;什么是统计学-statistics-learning&quot;&gt;&lt;a href=&quot;#什么是统计学-statistics-learning&quot; class=&quot;headerlink&quot; title=&quot;什么是统计学(statistics learning)&quot;&gt;&lt;/a&gt;什么是统计学(statistics learning)&lt;/h6&gt;&lt;p&gt;​       统计学习是关于计算机基于数据构建概率统计模型并运用模型对数据进行分析与预测的一门学科。统计学习包括监督学习、非监督学习、半监督学习和强化学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h6 id=&quot;统计学三要素&quot;&gt;&lt;a href=&quot;#统计学三要素&quot; class=&quot;headerlink&quot; title=&quot;统计学三要素&quot;&gt;&lt;/a&gt;统计学三要素&lt;/h6&gt;&lt;p&gt;​                                                        方法 = 模型 + 策略 + 算法&lt;/p&gt;
&lt;p&gt;​      模型、策略 、算法三要素是理解统计学习中，起到提纲挈领的作用。&lt;/p&gt;
&lt;p&gt;​      模型(model)：亦为假设空间(hypothesis),包含所有可能的太监概率分布或者决策函数。&lt;/p&gt;
&lt;p&gt;​      策略(strategy): 亦为评价准则(evaluation  criterion)，评价模型经验风险最小化与结构风险最小化。不同模型有不同的风险函数&lt;/p&gt;
&lt;p&gt;​      算法(algorithm): 学习模型的具体计算方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>statistics algorithms learning</title>
    <link href="http://yoursite.com/2019/11/15/statistics-algorithms-learning/"/>
    <id>http://yoursite.com/2019/11/15/statistics-algorithms-learning/</id>
    <published>2019-11-15T08:52:59.000Z</published>
    <updated>2019-11-19T12:13:42.235Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/fengdu78/lihang-code&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;李航统计学代码实现&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;李航-统计学与吴恩达-深度学习理论与代码实践&quot;&gt;&lt;a href=&quot;#李航-统计学与吴恩达-深度学习理论与代码实践&quot; class=&quot;headerlink&quot; title=&quot;李航-统计学与吴恩达-深度学习理论与代码实践&quot;&gt;&lt;/a&gt;李航-统计学与吴恩达-深度学习理论与代码实践&lt;/h2&gt;&lt;h3 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;h5 id=&quot;统计学习方法与深度学习概论-最小二乘法完整实践理论-感知机-统计学与深度学习中的回归&quot;&gt;&lt;a href=&quot;#统计学习方法与深度学习概论-最小二乘法完整实践理论-感知机-统计学与深度学习中的回归&quot; class=&quot;headerlink&quot; title=&quot;统计学习方法与深度学习概论     最小二乘法完整实践理论    感知机    统计学与深度学习中的回归&quot;&gt;&lt;/a&gt;统计学习方法与深度学习概论     最小二乘法完整实践理论    感知机    统计学与深度学习中的回归&lt;/h5&gt;&lt;h5 id=&quot;支持向量机-FM与FFM…-k近邻算法-决策树-随机森林-极限树-提升算法-xgboost&quot;&gt;&lt;a href=&quot;#支持向量机-FM与FFM…-k近邻算法-决策树-随机森林-极限树-提升算法-xgboost&quot; class=&quot;headerlink&quot; title=&quot;支持向量机    FM与FFM…    k近邻算法    决策树    随机森林    极限树    提升算法    xgboost&quot;&gt;&lt;/a&gt;支持向量机    FM与FFM…    k近邻算法    决策树    随机森林    极限树    提升算法    xgboost&lt;/h5&gt;&lt;h5 id=&quot;lightgbm-catboost-EM算法以及推广-朴素贝叶斯-循环神经网络-隐尔马可夫模型&quot;&gt;&lt;a href=&quot;#lightgbm-catboost-EM算法以及推广-朴素贝叶斯-循环神经网络-隐尔马可夫模型&quot; class=&quot;headerlink&quot; title=&quot;lightgbm    catboost    EM算法以及推广    朴素贝叶斯    循环神经网络    隐尔马可夫模型&quot;&gt;&lt;/a&gt;lightgbm    catboost    EM算法以及推广    朴素贝叶斯    循环神经网络    隐尔马可夫模型&lt;/h5&gt;&lt;h5 id=&quot;卷积神经网络-条件随机场-监督学习方法总结-无监督学习概论-强化学习&quot;&gt;&lt;a href=&quot;#卷积神经网络-条件随机场-监督学习方法总结-无监督学习概论-强化学习&quot; class=&quot;headerlink&quot; title=&quot;卷积神经网络    条件随机场    监督学习方法总结    无监督学习概论    强化学习&quot;&gt;&lt;/a&gt;卷积神经网络    条件随机场    监督学习方法总结    无监督学习概论    强化学习&lt;/h5&gt;&lt;h5 id=&quot;autoML&quot;&gt;&lt;a href=&quot;#autoML&quot; class=&quot;headerlink&quot; title=&quot;autoML&quot;&gt;&lt;/a&gt;autoML&lt;/h5&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
      <category term="algorithms" scheme="http://yoursite.com/categories/python/algorithms/"/>
    
    
      <category term="statistics" scheme="http://yoursite.com/tags/statistics/"/>
    
  </entry>
  
  <entry>
    <title>vim技巧</title>
    <link href="http://yoursite.com/2019/11/09/vim%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/11/09/vim技巧/</id>
    <published>2019-11-09T06:38:42.000Z</published>
    <updated>2019-11-11T02:32:53.971Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fengyuhetao/shell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell脚本案列大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tinylab.org/open-shell-book/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell系列教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/formatting/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;goole-shell开发规范&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-vim总结技巧&quot;&gt;&lt;a href=&quot;#1-vim总结技巧&quot; class=&quot;headerlink&quot; title=&quot;1.vim总结技巧&quot;&gt;&lt;/a&gt;1.vim总结技巧&lt;/h2&gt;&lt;h4 id=&quot;vim键盘图&quot;&gt;&lt;a href=&quot;#vim键盘图&quot; class=&quot;headerlink&quot; title=&quot;vim键盘图&quot;&gt;&lt;/a&gt;vim键盘图&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/uploads/loading.gif&quot; data-original=&quot;https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-巧技" scheme="http://yoursite.com/categories/%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>hive 脚本用户 and beeline</title>
    <link href="http://yoursite.com/2019/11/09/hive-%E8%84%9A%E6%9C%AC%E7%94%A8%E6%88%B7-and-beeline/"/>
    <id>http://yoursite.com/2019/11/09/hive-脚本用户-and-beeline/</id>
    <published>2019-11-09T05:57:26.000Z</published>
    <updated>2019-11-22T10:20:24.212Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;[https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline%E2%80%93NewCommandLineShell](https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline–NewCommandLineShell)&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HiveServer2 Clients&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;HiveServer2Clients简介&quot;&gt;&lt;a href=&quot;#HiveServer2Clients简介&quot; class=&quot;headerlink&quot; title=&quot;HiveServer2Clients简介&quot;&gt;&lt;/a&gt;HiveServer2Clients简介&lt;/h4&gt;&lt;h6 id=&quot;1-beeline是什么&quot;&gt;&lt;a href=&quot;#1-beeline是什么&quot; class=&quot;headerlink&quot; title=&quot;1.beeline是什么&quot;&gt;&lt;/a&gt;1.beeline是什么&lt;/h6&gt;&lt;p&gt;​    Beeline，是HiveServer2的JDBC客户端，基于SQLLine命令行接口。Beeline Shell可以工作在嵌入式模式和远程模式，在嵌入式模式中，它运行一个嵌入式的Hive（类似于Hive CLI），在远程模式中，通过Thrift连接到一个单独的HiveServer2进程，从Hive 0.14开始，当Beeline和HiveServer2一起使用时，它会从HiveServer2打印执行查询的日志信息到STDERR。建议在生产环境使用远程HiveServer2模式，因为这样更安全，不需要为用户授予直接的HDFS/Metastore访问权限&lt;/p&gt;
    
    </summary>
    
    
      <category term="hive" scheme="http://yoursite.com/categories/hive/"/>
    
    
  </entry>
  
  <entry>
    <title>linux菜鸟</title>
    <link href="http://yoursite.com/2019/11/05/linux%E8%8F%9C%E9%B8%9F/"/>
    <id>http://yoursite.com/2019/11/05/linux菜鸟/</id>
    <published>2019-11-05T08:26:36.000Z</published>
    <updated>2019-11-09T08:51:01.352Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;菜鸟-linux命令总结&quot;&gt;&lt;a href=&quot;#菜鸟-linux命令总结&quot; class=&quot;headerlink&quot; title=&quot;菜鸟-linux命令总结&quot;&gt;&lt;/a&gt;菜鸟-linux命令总结&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jaywcjlove/linux-command&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux命令大全教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://man.linuxde.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux搜索大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wangchujiang.com/linux-command/list.html#!kw=ls&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux命令搜索教程岚&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/judasn/Linux-Tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux安装教程-bigData&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fengyuhetao/shell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell脚本案列大全&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-命令大全&quot;&gt;&lt;a href=&quot;#1-命令大全&quot; class=&quot;headerlink&quot; title=&quot;1. 命令大全&quot;&gt;&lt;/a&gt;1. 命令大全&lt;/h4&gt;&lt;h5 id=&quot;文件传输&quot;&gt;&lt;a href=&quot;#文件传输&quot; class=&quot;headerlink&quot; title=&quot;文件传输&quot;&gt;&lt;/a&gt;文件传输&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bye、ftp、ftpcount、ftpshut、ftpwho、ncftp、tftp、uucico、uucp、uupick、uuto、scp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10设置电脑内网连接网线，外网连接wifi</title>
    <link href="http://yoursite.com/2019/11/04/Win10%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%84%91%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BA%BF%EF%BC%8C%E5%A4%96%E7%BD%91%E8%BF%9E%E6%8E%A5wifi/"/>
    <id>http://yoursite.com/2019/11/04/Win10设置电脑内网连接网线，外网连接wifi/</id>
    <published>2019-11-04T10:05:42.000Z</published>
    <updated>2019-11-29T07:14:36.255Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Win10设置电脑内网连接网线，外网连接wifi&quot;&gt;&lt;a href=&quot;#Win10设置电脑内网连接网线，外网连接wifi&quot; class=&quot;headerlink&quot; title=&quot;Win10设置电脑内网连接网线，外网连接wifi&quot;&gt;&lt;/a&gt;Win10设置电脑内网连接网线，外网连接wifi&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;win10一台电脑即可使用内网又可使用外网原理&lt;/p&gt;
&lt;p&gt;​    您可以把电脑比喻为一个路由器。就像打电话的移动服务器一样，一台服务器可以多个用户使用，就是因为每一个用户有专用的电话号码，然后通过中转服务器转到你所到达的属地，再到达相应的用用户。&lt;/p&gt;
&lt;p&gt;​    所以你就是用户，电脑就是中转器，你访问不同的页面，通过路由转到不同的网段，就可以使用相应的网络了。当然内网和外网是有优先级的。也就是说你访问的网页，优先使用哪一个网段。选取看你电脑哪一个网段是常用的。比如说我，外网常用，当然使用外网，并且外网的访问ip是很复杂的，分配网段比较复杂，分配内容比较容易。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="巧技" scheme="http://yoursite.com/categories/%E5%B7%A7%E6%8A%80/"/>
    
    
  </entry>
  
  <entry>
    <title>asyncc实践</title>
    <link href="http://yoursite.com/2019/10/31/asyncc%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2019/10/31/asyncc实践/</id>
    <published>2019-10-31T02:55:32.000Z</published>
    <updated>2019-10-31T05:15:19.129Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;协程异步实践&quot;&gt;&lt;a href=&quot;#协程异步实践&quot; class=&quot;headerlink&quot; title=&quot;协程异步实践&quot;&gt;&lt;/a&gt;协程异步实践&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;[https://hubertroy.gitbooks.io/aiohttp-chinese-documentation/content/aiohttp%E6%96%87%E6%A1%A3/Introduce.html](https://hubertroy.gitbooks.io/aiohttp-chinese-documentation/content/aiohttp文档/Introduce.html)&quot;&gt;aiohttp&lt;/a&gt;: 是一个为Python提供异步HTTP 客户端/服务端编程，基于&lt;a href=&quot;https://aiohttp.readthedocs.io/en/stable/glossary.html#term-asyncio&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;asyncio(Python用于支持异步编程的标准库)&lt;/a&gt;的异步库。&lt;/p&gt;
&lt;p&gt;​    此代码，通过aiohttp异步请求四个网页，并且异步解析网页，存储为四个文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="thread" scheme="http://yoursite.com/tags/thread/"/>
    
  </entry>
  
  <entry>
    <title>python algorithms string</title>
    <link href="http://yoursite.com/2019/10/30/python-algorithms-string/"/>
    <id>http://yoursite.com/2019/10/30/python-algorithms-string/</id>
    <published>2019-10-30T11:44:55.000Z</published>
    <updated>2019-10-31T07:00:22.384Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;1-1-旋转字符串&quot;&gt;&lt;a href=&quot;#1-1-旋转字符串&quot; class=&quot;headerlink&quot; title=&quot;1.1 旋转字符串&quot;&gt;&lt;/a&gt;1.1 旋转字符串&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;给定一个字符串，要求把字符串前面的若干个字符移动到字符串的尾部，如把字符串“abcdef”前面的2个字符’a’和’b’移动到字符串的尾部，使得原字符串变成字符串“cdefab”。请写一个函数完成此功能，要求对长度为n的字符串操作的时间复杂度为 O(n)，空间复杂度为 O(1)。&lt;/p&gt;
&lt;h4 id=&quot;方法：三步反转法&quot;&gt;&lt;a href=&quot;#方法：三步反转法&quot; class=&quot;headerlink&quot; title=&quot;方法：三步反转法&quot;&gt;&lt;/a&gt;方法：三步反转法&lt;/h4&gt;&lt;p&gt;对于这个问题，换一个角度思考一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>window10 快捷键</title>
    <link href="http://yoursite.com/2019/10/30/window10-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2019/10/30/window10-快捷键/</id>
    <published>2019-10-30T02:29:30.000Z</published>
    <updated>2019-10-31T05:14:50.812Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;1-常用window10-快捷键菜单&quot;&gt;&lt;a href=&quot;#1-常用window10-快捷键菜单&quot; class=&quot;headerlink&quot; title=&quot;1.常用window10 快捷键菜单&quot;&gt;&lt;/a&gt;1.常用window10 快捷键菜单&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Win+D：显示桌面&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;　　&lt;strong&gt;Win+E：打开资源管理器&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;　　&lt;strong&gt;Win+I：打开设置界面&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;　　&lt;strong&gt;Win+L：锁定屏幕&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;　　&lt;strong&gt;Win+R：打开运行窗口&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="巧技" scheme="http://yoursite.com/categories/%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="win10快捷键" scheme="http://yoursite.com/tags/win10%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>协程与异步I/O</title>
    <link href="http://yoursite.com/2019/10/29/%E5%8D%8F%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5I-O/"/>
    <id>http://yoursite.com/2019/10/29/协程与异步I-O/</id>
    <published>2019-10-29T09:07:09.000Z</published>
    <updated>2019-10-30T03:21:11.169Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://www.liujiangblog.com/course/python/83&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通常在Python中我们进行并发编程一般都是使用多线程或者多进程来实现的，对于CPU计算密集型任务由于GIL的存在通常使用多进程来实现，而对于IO密集型任务可以通过线程调度来让线程在执行IO任务时让出GIL，从而实现表面上的并发。&lt;/p&gt;
&lt;p&gt;其实对于IO密集型任务我们还有一种选择就是协程。&lt;strong&gt;协程，又称微线程，英文名Coroutine&lt;/strong&gt;，是运行在单线程中的“并发”，协程相比多线程的一大优势就是省去了多线程之间的切换开销，获得了更高的运行效率。Python中的异步IO模块asyncio就是基本的协程模块。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="thread" scheme="http://yoursite.com/tags/thread/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python thread 基础概念与方法</title>
    <link href="http://yoursite.com/2019/10/29/python-thread-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/10/29/python-thread-基础概念与方法/</id>
    <published>2019-10-29T08:10:46.000Z</published>
    <updated>2019-10-31T03:25:20.560Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://www.liujiangblog.com/course/python/79&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在Python3中，通过threading模块提供线程的功能。原来的thread模块已废弃。但是threading模块中有个Thread类（大写的T，类名），是模块中最主要的线程类，一定要分清楚了，千万不要搞混了。&lt;/p&gt;
&lt;p&gt;threading模块提供了一些比较实用的方法或者属性，例如：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法与属性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;current_thread()&lt;/td&gt;
&lt;td&gt;返回当前线程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;active_count()&lt;/td&gt;
&lt;td&gt;返回当前活跃的线程数，1个主线程+n个子线程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get_ident()&lt;/td&gt;
&lt;td&gt;返回当前线程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enumerater()&lt;/td&gt;
&lt;td&gt;返回当前活动 Thread 对象列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;main_thread()&lt;/td&gt;
&lt;td&gt;返回主 Thread 对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;settrace(func)&lt;/td&gt;
&lt;td&gt;为所有线程设置一个 trace 函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;setprofile(func)&lt;/td&gt;
&lt;td&gt;为所有线程设置一个 profile 函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stack_size([size])&lt;/td&gt;
&lt;td&gt;返回新创建线程栈大小；或为后续创建的线程设定栈大小为 size&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIMEOUT_MAX&lt;/td&gt;
&lt;td&gt;Lock.acquire(), RLock.acquire(), Condition.wait() 允许的最大超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="-- thread" scheme="http://yoursite.com/tags/thread/"/>
    
  </entry>
  
  <entry>
    <title>python thread tutorial</title>
    <link href="http://yoursite.com/2019/10/29/python-thread-tutorial/"/>
    <id>http://yoursite.com/2019/10/29/python-thread-tutorial/</id>
    <published>2019-10-29T05:39:46.000Z</published>
    <updated>2019-10-31T03:25:38.164Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;python-thread-tutorial&quot;&gt;&lt;a href=&quot;#python-thread-tutorial&quot; class=&quot;headerlink&quot; title=&quot;python thread tutorial&quot;&gt;&lt;/a&gt;python thread tutorial&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.liujiangblog.com/course/python/82&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-python-线程与进程的区别&quot;&gt;&lt;a href=&quot;#1-python-线程与进程的区别&quot; class=&quot;headerlink&quot; title=&quot;1. python 线程与进程的区别&quot;&gt;&lt;/a&gt;1. python 线程与进程的区别&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;进程&lt;/strong&gt;是程序（软件，应用）的一个执行实例，每个运行中的程序，可以同时创建多个进程，但至少要有一个。每个进程都提供执行程序所需的所有资源，都有一个虚拟的地址空间、可执行的代码、操作系统的接口、安全的上下文（记录启动该进程的用户和权限等等）、唯一的进程ID、环境变量、优先级类、最小和最大的工作空间（内存空间）。进程可以包含线程，并且每个进程必须有至少一个线程。每个进程启动时都会最先产生一个线程，即主线程，然后主线程会再创建其他的子线程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="thread" scheme="http://yoursite.com/tags/thread/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>金字塔原理</title>
    <link href="http://yoursite.com/2019/10/28/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2019/10/28/金字塔原理/</id>
    <published>2019-10-28T12:43:53.000Z</published>
    <updated>2019-10-30T03:21:23.405Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;《金字塔原理》读书笔记&quot;&gt;&lt;a href=&quot;#《金字塔原理》读书笔记&quot; class=&quot;headerlink&quot; title=&quot;《金字塔原理》读书笔记&quot;&gt;&lt;/a&gt;《金字塔原理》读书笔记&lt;/h1&gt;&lt;p&gt;附：&lt;a href=&quot;http://byteliu.com/PDF/金字塔原理.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;金字塔原理.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工作的时候，特别是搞技术的同学，我们通常会有一种感觉，“表达” 比 “做” 难。有时候明明做得挺好的一件事情，表达出来却不是那么回事情，特别是当转正、晋升述职的时候，都不知道怎么来组织自己的思路。平时在和同事、Partner沟通的时候，需要沟通好一会才能把事情说清楚。 如何整理自己的思维逻辑，表达自己想表达的内容；如何能让对方看懂、听明白、记住我们想表达的；如何让对方顺着我们的思路一起思考。这是门很深的学问。 但其实有一些普世方法，在我们初中、高中的语文课上就学习过。其中，有个鼎鼎有名的原理：“金字塔原理”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Nonviolent Communication</title>
    <link href="http://yoursite.com/2019/10/28/Nonviolent-Communication/"/>
    <id>http://yoursite.com/2019/10/28/Nonviolent-Communication/</id>
    <published>2019-10-28T12:31:46.000Z</published>
    <updated>2019-10-30T03:20:20.189Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;非暴力沟通总结笔记&quot;&gt;&lt;a href=&quot;#非暴力沟通总结笔记&quot; class=&quot;headerlink&quot; title=&quot;非暴力沟通总结笔记&quot;&gt;&lt;/a&gt;非暴力沟通总结笔记&lt;/h1&gt;&lt;h3 id=&quot;一、什么是非暴力沟通&quot;&gt;&lt;a href=&quot;#一、什么是非暴力沟通&quot; class=&quot;headerlink&quot; title=&quot;一、什么是非暴力沟通&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、什么是非暴力沟通&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;非暴力沟通是指提我们要专注于彼此的观察、感受、需要和请求，通过转变谈话和聆听的方式，化解人际间的冲突，获得爱和幸福。非暴力意味着让爱融入生活。让尊重、理解、欣赏、感激、慈悲和友情，而非自私自利、贪婪、憎恨、偏见、怀疑和敌意，来主导生活。&lt;/p&gt;
&lt;h3 id=&quot;二、非暴力沟通的作用&quot;&gt;&lt;a href=&quot;#二、非暴力沟通的作用&quot; class=&quot;headerlink&quot; title=&quot;二、非暴力沟通的作用&quot;&gt;&lt;/a&gt;&lt;strong&gt;二、非暴力沟通的作用&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;非暴力沟通能够治疗内心深处的隐秘伤痛，超越个人心智和情感的局限性，突破那些引发愤怒、沮丧、焦虑等负面情绪的思维方式，用不带伤害的方式化解人际间的冲突，学会建立和谐的生命体验。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Comprehensive-Python-Cheatsheet</title>
    <link href="http://yoursite.com/2019/10/27/Comprehensive-Python-Cheatsheet/"/>
    <id>http://yoursite.com/2019/10/27/Comprehensive-Python-Cheatsheet/</id>
    <published>2019-10-27T14:30:20.000Z</published>
    <updated>2019-10-30T03:20:57.611Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;Contents&quot;&gt;&lt;a href=&quot;#Contents&quot; class=&quot;headerlink&quot; title=&quot;Contents&quot;&gt;&lt;/a&gt;Contents&lt;/h2&gt;&lt;p&gt;​    &lt;strong&gt;1. Collections:&lt;/strong&gt;   &lt;strong&gt;List&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Dictionary&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Set&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Tuple&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Range&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Enumerate&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Iterator&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Generator&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;2. Types:&lt;/strong&gt;            &lt;strong&gt;Type&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;String&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Regular_Exp&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Format&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Numbers&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Combinatorics&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Datetime&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;3. Syntax:&lt;/strong&gt;           &lt;strong&gt;Args&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Inline&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Closure&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Decorator&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Class&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Duck_Types&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Enum&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Exceptions&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;4. System:&lt;/strong&gt;          &lt;strong&gt;Print&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Input&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Command_Line_Arguments&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Open&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Path&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Command_Execution&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;5. Data:&lt;/strong&gt; &lt;strong&gt;JSON&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Pickle&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;CSV&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;SQLite&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Bytes&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Struct&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Array&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;MemoryView&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Deque&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;6. Advanced:&lt;/strong&gt;     &lt;strong&gt;Threading&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Operator&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Introspection&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Metaprograming&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Eval&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Coroutine&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;br&gt;​    &lt;strong&gt;7. Libraries:&lt;/strong&gt;        &lt;strong&gt;Progress_Bar&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Plot&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Table&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Curses&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Logging&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Scraping&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Web&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Profile&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt;&lt;br&gt;​   &lt;strong&gt;NumPy&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Image&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Animation&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Audio&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;Synthesizer&lt;/strong&gt; &lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;Main&quot;&gt;&lt;a href=&quot;#Main&quot; class=&quot;headerlink&quot; title=&quot;Main&quot;&gt;&lt;/a&gt;Main&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:     &lt;span class=&quot;comment&quot;&gt;# Runs main() if file wasn&#39;t imported.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hive SQL 编译过程</title>
    <link href="http://yoursite.com/2019/10/15/Hive-SQL-%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/10/15/Hive-SQL-编译过程/</id>
    <published>2019-10-15T11:31:48.000Z</published>
    <updated>2019-11-18T11:21:22.576Z</updated>
    
    <summary type="html">
    
      &lt;iframe scrolling=&quot;no&quot; src=&quot;https://tianqiapi.com/api.php?style=tx&amp;skin=sogou&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;30&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
---
# **Hive SQL 编译过程**

&lt;p&gt;Hive是基于Hadoop的一个数据仓库系统，在各大公司都有广泛的应用。美团数据仓库也是基于Hive搭建，每天执行近万次的Hive ETL计算流程，负责每天数百GB的数据存储和分析。Hive的稳定性和性能对我们的数据分析非常关键。&lt;/p&gt;
&lt;p&gt;在几次升级Hive的过程中，我们遇到了一些大大小小的问题。通过向社区的咨询和自己的努力，在解决这些问题的同时我们对Hive将SQL编译为MapReduce的过程有了比较深入的理解。对这一过程的理解不仅帮助我们解决了一些Hive的bug，也有利于我们优化Hive SQL，提升我们对Hive的掌控力，同时有能力去定制一些需要的功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="database" scheme="http://yoursite.com/categories/database/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
      <category term="hive" scheme="http://yoursite.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>DB2 performance Optimization</title>
    <link href="http://yoursite.com/2019/10/14/DB2-performance-Optimization/"/>
    <id>http://yoursite.com/2019/10/14/DB2-performance-Optimization/</id>
    <published>2019-10-14T02:02:52.000Z</published>
    <updated>2019-10-30T03:20:48.520Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;iframe scrolling=&quot;no&quot; src=&quot;https://tianqiapi.com/api.php?style=tx&amp;skin=sogou&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;30&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
# 提高 DB2 查询性能的常用方法

&lt;h5 id=&quot;提高DB2查询性能的常用方法&quot;&gt;&lt;a href=&quot;#提高DB2查询性能的常用方法&quot; class=&quot;headerlink&quot; title=&quot;提高DB2查询性能的常用方法&quot;&gt;&lt;/a&gt;&lt;strong&gt;提高DB2查询性能的常用方法&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;将着重介绍如何使用 Visual Explain 和 db2expln 查看动态查询的存取计划。读者可以查阅 &lt;a href=&quot;http://publib.boulder.ibm.com/infocenter/db2luw/v8/index.jsp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DB2 Info Center&lt;/a&gt; 获得有关查看静态查询存取计划的内容。&lt;/p&gt;
&lt;h5 id=&quot;DB2-Visual-Explain&quot;&gt;&lt;a href=&quot;#DB2-Visual-Explain&quot; class=&quot;headerlink&quot; title=&quot;DB2 Visual Explain&quot;&gt;&lt;/a&gt;&lt;strong&gt;DB2 Visual Explain&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;DB2 提供了非常直观有效的方法来查看查询的存取计划。DB2 Visual Explain 能够获得可视化的查询计划，而 db2expln 命令则可以获得文本形式的查询计划。有了查询计划，我们就可以有针对的对查询进行优化。根据查询计划找出代价最高的扫描 ( 表扫描，索引扫描等 ) 和操作 (Join，Filter，Fetch 等 )，继而通过改写查询或者创建索引消除代价较高的扫描或操作来优化查询。&lt;/p&gt;
    
    </summary>
    
    
      <category term="database" scheme="http://yoursite.com/categories/database/"/>
    
    
      <category term="Optimization" scheme="http://yoursite.com/tags/Optimization/"/>
    
      <category term="db2" scheme="http://yoursite.com/tags/db2/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>mxLibraryLog</title>
    <link href="http://yoursite.com/2019/10/07/mxLibraryLog/"/>
    <id>http://yoursite.com/2019/10/07/mxLibraryLog/</id>
    <published>2019-10-07T08:37:10.000Z</published>
    <updated>2019-10-29T11:30:32.112Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="self-study" scheme="http://yoursite.com/tags/self-study/"/>
    
  </entry>
  
  <entry>
    <title>有梦就有远方</title>
    <link href="http://yoursite.com/2019/10/07/snaillife/"/>
    <id>http://yoursite.com/2019/10/07/snaillife/</id>
    <published>2019-10-07T07:59:43.000Z</published>
    <updated>2019-10-30T03:19:46.931Z</updated>
    
    <summary type="html">
    
      &lt;iframe scrolling=&quot;no&quot; src=&quot;https://tianqiapi.com/api.php?style=tx&amp;skin=sogou&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;30&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=1309814540&amp;auto=1&amp;height=66&quot;&gt;
&lt;/iframe&gt;


&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;&lt;font face=&quot;微软雅黑&quot; color=&quot;#339933&quot; text-align=&quot;center&quot; font-size=&quot;24&quot;&gt;有梦才有远方&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&quot;微软雅黑&quot; color=&quot;#FF0000&quot; style=&quot;background-color:#9999999;&quot;&gt;&amp;gt;    雪夜茫茫，你知道一棵小草的梦吗？寒冷孤寂中，她怀抱一个信念取暖，等到村归大地时，她就会以两片绿叶问候春天，而那两片绿叶，就是曾经在雪地下轻轻地梦呓。&lt;/font&gt;&lt;br&gt;&lt;font face=&quot;微软雅黑&quot; color=&quot;#FF7F00&quot; style=&quot;background-color:#9999999;&quot;&gt; &amp;gt;     候鸟南飞，征途迢迢，他的梦呢?在远方，在视野里，那是南方湛蓝的大海。她很累很累，但依然往前奋飞。因为梦又赐予她另一对翅膀。&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="梦想" scheme="http://yoursite.com/tags/%E6%A2%A6%E6%83%B3/"/>
    
      <category term="破晓" scheme="http://yoursite.com/tags/%E7%A0%B4%E6%99%93/"/>
    
      <category term="古月山风" scheme="http://yoursite.com/tags/%E5%8F%A4%E6%9C%88%E5%B1%B1%E9%A3%8E/"/>
    
  </entry>
  
</feed>
