<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail Life</title>
  <icon>http://yoursite.com/icon.png</icon>
  <subtitle>basketball dance rap</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-22T09:25:03.694Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>snail json</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>chapter7-greedy-algorithm</title>
    <link href="http://yoursite.com/2020/02/21/chapter7-greedy-algorithm/"/>
    <id>http://yoursite.com/2020/02/21/chapter7-greedy-algorithm/</id>
    <published>2020-02-21T09:08:13.000Z</published>
    <updated>2020-02-22T09:25:03.694Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;chapter7-greedy-algorithm&quot;&gt;&lt;a href=&quot;#chapter7-greedy-algorithm&quot; class=&quot;headerlink&quot; title=&quot;chapter7-greedy-algorithm&quot;&gt;&lt;/a&gt;chapter7-greedy-algorithm&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h5 id=&quot;贪心思想&quot;&gt;&lt;a href=&quot;#贪心思想&quot; class=&quot;headerlink&quot; title=&quot;贪心思想&quot;&gt;&lt;/a&gt;贪心思想&lt;/h5&gt;&lt;h6 id=&quot;1-分配饼干&quot;&gt;&lt;a href=&quot;#1-分配饼干&quot; class=&quot;headerlink&quot; title=&quot;1. 分配饼干&quot;&gt;&lt;/a&gt;1. 分配饼干&lt;/h6&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/assign-cookies/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Leetcode&lt;/a&gt; / &lt;a href=&quot;https://leetcode-cn.com/problems/assign-cookies/description/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;力扣&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def findContentChildren():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g, s = [ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ], [ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 由题意 “目标是尽可能满足越多数量的孩子”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 而饼干是有限的，所以首先满足胃口小的孩子，这样才能，尽可能满足较多数量的孩子&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    g.sort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.sort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n &amp;gt;= g[cnt]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cnt += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cnt &amp;gt;= len(g): &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(cnt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;findContentChildren()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>chapter6-stack-and-queue-algorithm</title>
    <link href="http://yoursite.com/2020/02/20/chapter6-stack-and-queue-algorithm/"/>
    <id>http://yoursite.com/2020/02/20/chapter6-stack-and-queue-algorithm/</id>
    <published>2020-02-20T10:07:32.000Z</published>
    <updated>2020-02-21T08:47:43.358Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;chapter6-stack-and-queue-algorithm&quot;&gt;&lt;a href=&quot;#chapter6-stack-and-queue-algorithm&quot; class=&quot;headerlink&quot; title=&quot;chapter6-stack-and-queue-algorithm&quot;&gt;&lt;/a&gt;chapter6-stack-and-queue-algorithm&lt;/h2&gt;&lt;h5 id=&quot;栈和队列算法&quot;&gt;&lt;a href=&quot;#栈和队列算法&quot; class=&quot;headerlink&quot; title=&quot;栈和队列算法&quot;&gt;&lt;/a&gt;栈和队列算法&lt;/h5&gt;&lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>chapter5-bit-operation-algorithm</title>
    <link href="http://yoursite.com/2020/02/20/chapter5-bit-operation-algorithm/"/>
    <id>http://yoursite.com/2020/02/20/chapter5-bit-operation-algorithm/</id>
    <published>2020-02-20T04:18:58.000Z</published>
    <updated>2020-02-21T09:06:26.629Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;chapter5-bit-operation-algorith&quot;&gt;&lt;a href=&quot;#chapter5-bit-operation-algorith&quot; class=&quot;headerlink&quot; title=&quot;chapter5-bit-operation-algorith&quot;&gt;&lt;/a&gt;chapter5-bit-operation-algorith&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>chapter4-binary-search-algorithm</title>
    <link href="http://yoursite.com/2020/02/19/chapter4-binary-search-algorithm/"/>
    <id>http://yoursite.com/2020/02/19/chapter4-binary-search-algorithm/</id>
    <published>2020-02-19T11:07:15.000Z</published>
    <updated>2020-02-19T11:17:21.787Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;hapter4-binary-search-algorithm&quot;&gt;&lt;a href=&quot;#hapter4-binary-search-algorithm&quot; class=&quot;headerlink&quot; title=&quot;hapter4-binary-search-algorithm&quot;&gt;&lt;/a&gt;hapter4-binary-search-algorithm&lt;/h2&gt;&lt;h5 id=&quot;二分查找&quot;&gt;&lt;a href=&quot;#二分查找&quot; class=&quot;headerlink&quot; title=&quot;二分查找&quot;&gt;&lt;/a&gt;二分查找&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;h6 id=&quot;普通二分与变种&quot;&gt;&lt;a href=&quot;#普通二分与变种&quot; class=&quot;headerlink&quot; title=&quot;普通二分与变种&quot;&gt;&lt;/a&gt;普通二分与变种&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;binarySearch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nums, key = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left, right = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(left &amp;lt;= right):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mid = left + (right-left)//&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#mid=(l + h)//2方式 可能出现加法溢出，也就是说加法的结果大于整型能够表示的范围，比如5 5 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key == nums[mid]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &amp;gt; nums[mid]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               left = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                right = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(common())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#变种就是对边界进行判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;variety&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left, right = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (left &amp;lt; right):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mid = left + (right - left) // &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# mid=(l + h)//2方式 可能出现加法溢出，也就是说加法的结果大于整型能够表示的范围，比如5 5 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &amp;gt; nums[ mid ]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                left = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                right = mid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; left&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    index = variety()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(nums[index])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;binarySearch()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>chapter3-dynamic-algorithm </title>
    <link href="http://yoursite.com/2020/02/19/chapter3-dynamic-algorithm/"/>
    <id>http://yoursite.com/2020/02/19/chapter3-dynamic-algorithm/</id>
    <published>2020-02-19T05:36:43.000Z</published>
    <updated>2020-02-19T11:17:54.160Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;chapter3-dynamic-algorithm&quot;&gt;&lt;a href=&quot;#chapter3-dynamic-algorithm&quot; class=&quot;headerlink&quot; title=&quot;chapter3-dynamic-algorithm&quot;&gt;&lt;/a&gt;chapter3-dynamic-algorithm&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CyC2018/CS-Notes&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>snail first travel essays 3day</title>
    <link href="http://yoursite.com/2020/02/06/snail-first-travel-essays-3day/"/>
    <id>http://yoursite.com/2020/02/06/snail-first-travel-essays-3day/</id>
    <published>2020-02-06T07:57:59.000Z</published>
    <updated>2020-02-07T09:37:26.385Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;snail-first-travel-essays-3day&quot;&gt;&lt;a href=&quot;#snail-first-travel-essays-3day&quot; class=&quot;headerlink&quot; title=&quot;snail first travel essays 3day&quot;&gt;&lt;/a&gt;snail first travel essays 3day&lt;/h2&gt;&lt;p&gt;20200123  雨 目的地-西溪湿地公园&lt;/p&gt;
&lt;p&gt;一个人，一个口罩，一把伞，一个背包，一碗混沌，五个煎饺，一个目的地。&lt;/p&gt;
&lt;p&gt;由于新型肺炎的不断扩散，我家人的关注，我更加选择人少的地方了。综合了一下，很想去湿地公园，毕竟电视上看多了，想去看花和鸟，哈哈哈，虽然我们大璧山也有。。。&lt;/p&gt;
&lt;p&gt;第一次做杭州的公交，走路去车站，看见一个树，外面老皮坏了，重新又长了新枝干，我是棵树就好了，哈哈。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/loading.gif&quot; data-original=&quot;http://q5627p7xm.bkt.clouddn.com/IMG_20200123_104958.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-[随笔]" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>snail first travel essays 2day</title>
    <link href="http://yoursite.com/2020/02/06/snail-first-travel-essays-2day/"/>
    <id>http://yoursite.com/2020/02/06/snail-first-travel-essays-2day/</id>
    <published>2020-02-06T03:57:38.000Z</published>
    <updated>2020-02-07T13:10:21.900Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;snail-first-travel-essays-2day&quot;&gt;&lt;a href=&quot;#snail-first-travel-essays-2day&quot; class=&quot;headerlink&quot; title=&quot;snail first travel essays 2day&quot;&gt;&lt;/a&gt;snail first travel essays 2day&lt;/h2&gt;&lt;p&gt;20200122  雨  8:24 起床  洗涑 5煎饺 1豆腐脑 8元。&lt;/p&gt;
&lt;p&gt;带上口罩，打开哈罗APP，骑上单车，一只手拿着伞，一只手操作，耳朵听着歌与高德小姐姐的美妙声音，淋着雨一直走（技术不好，莫学我！！！），驶向浙江大学之江校区。&lt;/p&gt;
&lt;p&gt;根据自身情况，旅行不太喜欢坐公交，走路和骑单车对我来说更能够了解风土文化。&lt;/p&gt;
&lt;p&gt;城市的建筑，特别的中国的建筑，没有让我感到一丝的惊喜，可能雾太大了吧！&lt;/p&gt;
&lt;p&gt;大约40几分钟的形成，途中遇见交警，表面镇定自若，实着慌得一匹，差点行驶到外环去了，还好行驶3米后，发现没有非机动车道。我选择的是钱塘江岸过去的。 虽然没有看见钱塘江，不过在对岸，还是能够赶脚钱塘江很宽很长，毕竟那桥，就赶脚很牛逼。&lt;/p&gt;
&lt;p&gt;目的地到达，停车，果不其然，我越界了。还好我是第一次，我堂堂季包单车用户，不收我调度费，哈哈哈，突然高兴了不少。&lt;/p&gt;
&lt;p&gt;门卫，叫我拿出身份证登记一下。门卫直接在硬件上识别一下就可以了。看来现在景点效率十足啊。门卫给我说：“为什么不回家过年啊？”，我呵呵一下，“一言难尽啊！！！”&lt;/p&gt;
    
    </summary>
    
    
      <category term="-[随笔]" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>snail_first_travel_essays_1day</title>
    <link href="http://yoursite.com/2020/02/04/snail-first-travel-essays-1day/"/>
    <id>http://yoursite.com/2020/02/04/snail-first-travel-essays-1day/</id>
    <published>2020-02-04T08:40:49.000Z</published>
    <updated>2020-02-06T08:45:07.403Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;snail-first-travel-essays-1day&quot;&gt;&lt;a href=&quot;#snail-first-travel-essays-1day&quot; class=&quot;headerlink&quot; title=&quot;snail_first_travel_essays_1day&quot;&gt;&lt;/a&gt;snail_first_travel_essays_1day&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h5 id=&quot;第一次旅行规划总览&quot;&gt;&lt;a href=&quot;#第一次旅行规划总览&quot; class=&quot;headerlink&quot; title=&quot;第一次旅行规划总览&quot;&gt;&lt;/a&gt;第一次旅行规划总览&lt;/h5&gt;&lt;p&gt;​        总体游玩路途，从下图可完全看出。由于那时刚爆发新型肺炎，防范意识还不够高，口罩都带错了，第一天还是去的人多的西湖，不过是一个人，不喜欢人多的地方，也比较好奇，所以游玩，都是走的比较人少去的地方，观览。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一天(20200121)： 游玩西湖一圈&lt;/li&gt;
&lt;li&gt;第一天(20200122)： 游玩浙江大学之江校区-九溪烟树&lt;/li&gt;
&lt;li&gt;第一天(20200123)： 游玩西溪湿地公园&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/loading.gif&quot; data-original=&quot;http://q5627p7xm.bkt.clouddn.com/snail1_zlt.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-[随笔]" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>spark与pandas 如何构建分类模型</title>
    <link href="http://yoursite.com/2020/01/20/spark%E4%B8%8Epandas-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2020/01/20/spark与pandas-如何构建分类模型/</id>
    <published>2020-01-20T08:34:48.000Z</published>
    <updated>2020-02-02T08:17:17.760Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;spark与pandas-如何构建分类模型&quot;&gt;&lt;a href=&quot;#spark与pandas-如何构建分类模型&quot; class=&quot;headerlink&quot; title=&quot;spark与pandas 如何构建分类模型&quot;&gt;&lt;/a&gt;spark与pandas 如何构建分类模型&lt;/h2&gt;&lt;p&gt;本章通过sklearn，鸢尾花数据，通过pandas的DataFrame与spark的DataFrame之间转化，构建spark多分类模型，并且图调参以及得到最佳参数和评价分数。具体代码流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h6 id=&quot;导入相关工具包&quot;&gt;&lt;a href=&quot;#导入相关工具包&quot; class=&quot;headerlink&quot; title=&quot;导入相关工具包&quot;&gt;&lt;/a&gt;导入相关工具包&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;  sklearn.datasets &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; sd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.context &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; SparkContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.sql.context &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;  SparkSession&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.sql &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Row&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.ml.linalg &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vectors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.mllib.regression &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; LabeledPoint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.ml.tuning &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ParamGridBuilder,CrossValidator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.ml.classification &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; LogisticRegression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.mllib.classification &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; LogisticRegressionWithLBFGS, LogisticRegressionModel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyspark.ml.evaluation &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; MulticlassClassificationEvaluator,BinaryClassificationEvaluator&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="spark" scheme="http://yoursite.com/categories/spark/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter2 最小二乘法完整实践理论</title>
    <link href="http://yoursite.com/2019/11/20/chapter2-%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E5%AE%8C%E6%95%B4%E5%AE%9E%E8%B7%B5%E7%90%86%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/11/20/chapter2-最小二乘法完整实践理论/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2019-12-26T11:49:03.322Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;chapter2-最小二乘法完整实践理论&quot;&gt;&lt;a href=&quot;#chapter2-最小二乘法完整实践理论&quot; class=&quot;headerlink&quot; title=&quot;chapter2- 最小二乘法完整实践理论&quot;&gt;&lt;/a&gt;chapter2- 最小二乘法完整实践理论&lt;/h3&gt;&lt;h6 id=&quot;1-概要&quot;&gt;&lt;a href=&quot;#1-概要&quot; class=&quot;headerlink&quot; title=&quot;1.概要&quot;&gt;&lt;/a&gt;1.概要&lt;/h6&gt;&lt;p&gt;​    此章，通过最小二乘法，在统计学习，机器学习，深度学习的轨道上进行讨论，它们叁之间的共性与异性。&lt;/p&gt;
&lt;h6 id=&quot;2-什么是最小二乘法&quot;&gt;&lt;a href=&quot;#2-什么是最小二乘法&quot; class=&quot;headerlink&quot; title=&quot;2.什么是最小二乘法&quot;&gt;&lt;/a&gt;2.什么是最小二乘法&lt;/h6&gt;&lt;p&gt;​    &lt;strong&gt;最小二乘法&lt;/strong&gt;（&lt;strong&gt;least squares method&lt;/strong&gt;），又称&lt;strong&gt;最小平方法&lt;/strong&gt;，是一种&lt;a href=&quot;https://zh.wikipedia.org/wiki/数学&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;数学&lt;/a&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/优化&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;优化&lt;/a&gt;方法。它通过最小化&lt;a href=&quot;https://zh.wikipedia.org/wiki/误差&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;误差&lt;/a&gt;的平方和寻找数据的最佳函数匹配。&lt;/p&gt;
&lt;p&gt;​    利用最小二乘法可以简便地求得未知的数据，并使得求得的数据与实际数据之间误差的平方和为最小。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter3-感知机</title>
    <link href="http://yoursite.com/2019/11/20/chapter3-%E6%84%9F%E7%9F%A5%E6%9C%BA/"/>
    <id>http://yoursite.com/2019/11/20/chapter3-感知机/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2019-12-24T02:29:32.035Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;chapter3-感知机&quot;&gt;&lt;a href=&quot;#chapter3-感知机&quot; class=&quot;headerlink&quot; title=&quot;chapter3-感知机&quot;&gt;&lt;/a&gt;chapter3-感知机&lt;/h2&gt;&lt;h5 id=&quot;1-概要&quot;&gt;&lt;a href=&quot;#1-概要&quot; class=&quot;headerlink&quot; title=&quot;1.概要&quot;&gt;&lt;/a&gt;1.概要&lt;/h5&gt;&lt;p&gt;通过上一章最小二乘法的理论与实践，我们知道统计学学习-机器学习-深度学习，它们之间的联系与区别。本章我们将讨论感知机算法，再次讨论他们叁之间的关系。并且很有必要熟悉感知机，虽然它现在在分类模型当中已经不适用，因为泛化能力有限，能力更强的为支撑向量机(svm)。但是它在机器学习和深度学习其他深奥算法上有较大的联系，甚至为其算法逻辑实现基础。掌握它的思想，为进一步的提升，打下坚实的基础。&lt;/p&gt;
&lt;h5 id=&quot;2-感知机模型原理&quot;&gt;&lt;a href=&quot;#2-感知机模型原理&quot; class=&quot;headerlink&quot; title=&quot;2.感知机模型原理&quot;&gt;&lt;/a&gt;2.感知机模型原理&lt;/h5&gt;&lt;p&gt;首先感知机算法是一种二分类线性算法。当然也可以提升至多维分类模型上，但是都是线性模型，对于非线性的，神经网络了解一下。感知机学习算法：用一个函数输入$x$(一个实值的向量)映射到输出值$f(x)$(一个二元值):&lt;br&gt;$$&lt;br&gt;f(x)=\begin{cases}&lt;br&gt;    1 \qquad if \quad w.x + b &amp;gt; 0 \ \&lt;br&gt;    -1 \qquad other wise&lt;br&gt;\end{cases}&lt;br&gt;$$&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter4-梯度下降算法(Gradient Descent)</title>
    <link href="http://yoursite.com/2019/11/20/chapter4-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95-Gradient-Descent/"/>
    <id>http://yoursite.com/2019/11/20/chapter4-梯度下降算法-Gradient-Descent/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2019-12-24T08:52:08.975Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;hr&gt;
&lt;h3 id=&quot;chapter4-梯度下降算法-Gradient-Descent&quot;&gt;&lt;a href=&quot;#chapter4-梯度下降算法-Gradient-Descent&quot; class=&quot;headerlink&quot; title=&quot;chapter4-梯度下降算法(Gradient Descent)&quot;&gt;&lt;/a&gt;chapter4-梯度下降算法(Gradient Descent)&lt;/h3&gt;&lt;p&gt;求解机器学习算法的模型参数时，即无约束优化问题时，梯度下降（Gradient Descent）是最常采用的方法之一，另一种常用的方法是最小二乘法。这里就对梯度下降法做一个完整的总结。&lt;/p&gt;
&lt;h5 id=&quot;1-梯度&quot;&gt;&lt;a href=&quot;#1-梯度&quot; class=&quot;headerlink&quot; title=&quot;1.梯度&quot;&gt;&lt;/a&gt;1.梯度&lt;/h5&gt;&lt;p&gt;在微积分里面，对多元函数的参数求∂偏导数，把求得的各个参数的偏导数以向量的形式写出来，就是梯度。比如函数$f(x,y)$,分别对$x,y$进行求导，求得梯度向量是$(\frac{\partial f}{\partial x},\frac{\partial f}{\partial y})^T$ 简称$grad f(x,y)$ | $\Delta f(x,y)$,对于点为$(x_0,y_0)$,他的梯度向量值为$(\frac{\partial f}{\partial x_0},\frac{\partial f}{\partial y_0})^T$ | $\Delta f(x_0,y_0)$,如果为三个变量，就为：$\Delta f(x,y,z)$,以此类推。&lt;/p&gt;
&lt;p&gt;那为什么要找到函数$f(x,y)$的梯度呢？因为梯度向量是函数下降(增加)速度最快的地方。比如说，在初始点$(x_0,y_0)$ 沿着梯度向量$\Delta f(x_0,y_0)$ (-$\Delta f(x_0,y_0)$)，增加最快(下降最快)的方向 ，我们能够更快的找到函数的最小值(最大值)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter6-神经网络</title>
    <link href="http://yoursite.com/2019/11/20/chapter6-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2019/11/20/chapter6-神经网络/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2020-02-07T13:21:12.197Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;chapter6-神经网络（neural-networks）&quot;&gt;&lt;a href=&quot;#chapter6-神经网络（neural-networks）&quot; class=&quot;headerlink&quot; title=&quot;chapter6-神经网络（neural networks）&quot;&gt;&lt;/a&gt;chapter6-神经网络（neural networks）&lt;/h2&gt;&lt;h4 id=&quot;1-神经网络原理&quot;&gt;&lt;a href=&quot;#1-神经网络原理&quot; class=&quot;headerlink&quot; title=&quot;1. 神经网络原理&quot;&gt;&lt;/a&gt;1. 神经网络原理&lt;/h4&gt;&lt;h6 id=&quot;这节大部分内容参考AndrewNG深度学习教学视频以及黄海广博士在github上开源的吴恩达深度学习笔记-本节知识根据自己使用经验进行基本总结，细致末梢还请看吴恩达老师讲义。&quot;&gt;&lt;a href=&quot;#这节大部分内容参考AndrewNG深度学习教学视频以及黄海广博士在github上开源的吴恩达深度学习笔记-本节知识根据自己使用经验进行基本总结，细致末梢还请看吴恩达老师讲义。&quot; class=&quot;headerlink&quot; title=&quot;这节大部分内容参考AndrewNG深度学习教学视频以及黄海广博士在github上开源的吴恩达深度学习笔记,本节知识根据自己使用经验进行基本总结，细致末梢还请看吴恩达老师讲义。&quot;&gt;&lt;/a&gt;这节大部分内容参考AndrewNG深度学习&lt;a href=&quot;https://mooc.study.163.com/course/2001281002?tid=2001392029&amp;_trace_c_p_k2_=fb1e25a65ef84e5c927c8125d985e008#/info&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;教学视频&lt;/a&gt;以及黄海广博士在github上开源的吴恩达深度学习笔记,本节知识根据自己使用经验进行基本总结，细致末梢还请看吴恩达老师讲义。&lt;/h6&gt;&lt;p&gt;对于neural networks统计学原理，我将从下面伍个部分进行仔细探讨，因为这些部分是神经网络不可或缺的部分。我将通过与logisticRegression原理进行对比介绍，如果不知道或者不清楚的可以看前面所介绍的logistic。最后实现代码，更深一步了解简单的TensorFlow实现。并且分析机器学习和深度学习建模的联系。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h6 id=&quot;损失函数&quot;&gt;&lt;a href=&quot;#损失函数&quot; class=&quot;headerlink&quot; title=&quot;损失函数&quot;&gt;&lt;/a&gt;损失函数&lt;/h6&gt;&lt;p&gt;​        损失函数（cost function）是优化的目的。如果没有损失函数，也就没有了目标。不管是任何事情，都需要去了解问题的根本。知道问题的缘由，才能进一步进行建模优化。比如是回归还是分类。是有监督，还是无监督。使用什么统计学原理。如何筛选评价函数。这些都需要通过损失函数，与具体背景结合去构建模型。这里不考虑业务背景。现，只通过逻辑回归损失函数去优化，实现对图像的分类。即有监督。所以损失函数为：&lt;br&gt;$$&lt;br&gt;L(\theta) = -Y^Tlogh_{\theta}(X) - (E-Y)^T log(E-h_{\theta}(X))&lt;br&gt;$$&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter5-逻辑斯谛回归-LogisticRegression</title>
    <link href="http://yoursite.com/2019/11/20/chapter5-%E9%80%BB%E8%BE%91%E6%96%AF%E8%B0%9B%E5%9B%9E%E5%BD%92-LogisticRegression/"/>
    <id>http://yoursite.com/2019/11/20/chapter5-逻辑斯谛回归-LogisticRegression/</id>
    <published>2019-11-20T12:14:04.000Z</published>
    <updated>2020-02-19T11:31:27.434Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;chapter5-逻辑斯谛回归-LogisticRegression&quot;&gt;&lt;a href=&quot;#chapter5-逻辑斯谛回归-LogisticRegression&quot; class=&quot;headerlink&quot; title=&quot;chapter5-逻辑斯谛回归-LogisticRegression&quot;&gt;&lt;/a&gt;chapter5-逻辑斯谛回归-LogisticRegression&lt;/h3&gt;&lt;h4 id=&quot;statistics-learning&quot;&gt;&lt;a href=&quot;#statistics-learning&quot; class=&quot;headerlink&quot; title=&quot;statistics learning&quot;&gt;&lt;/a&gt;statistics learning&lt;/h4&gt;&lt;h5 id=&quot;1-浅谈线性回归&quot;&gt;&lt;a href=&quot;#1-浅谈线性回归&quot; class=&quot;headerlink&quot; title=&quot;1.浅谈线性回归&quot;&gt;&lt;/a&gt;1.浅谈线性回归&lt;/h5&gt;&lt;p&gt;由于前面&lt;a href=&quot;https://snailfrying.github.io/2019/11/20/chapter2-最小二乘法完整实践理论/#more&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最小二乘法&lt;/a&gt;和&lt;a href=&quot;https://snailfrying.github.io/2019/11/20/chapter4-梯度下降算法-Gradient-Descent/#more&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;梯度下降算法&lt;/a&gt;，已经大力讨论了回归模型，因此，本章只进行简单的回顾回归模型。分析线性回归原理和与最小二乘法之间的区别。&lt;/p&gt;
&lt;p&gt;线性回归与最小二乘法的最大区别，就在于损失函数的迭代。也就是如何优化损失函数。最小二乘法顾名思义，就是采用最小二乘法进行迭代，损失函数如下：&lt;br&gt;$$&lt;br&gt;J(\theta_0,\theta_1,\cdots,\theta_j) =\sum_{i=1}^m(h_θ(x_0^{(i)},x_1^{(i)},\cdots,x_j^{(i)}) - y^{(j)})^2=\sum_{i=1}^n(\sum_{j=1}^m\theta_jx_j^{(i)}-y^{(i)})^2&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;对损失函数求导为，更新参数$\theta$：&lt;br&gt;$$&lt;br&gt;\theta = (X^TX)^-1X^TY&lt;br&gt;$$&lt;br&gt;对于线性回归算法来说，就是利用梯度下降算法，损失函数如下：&lt;br&gt;$$&lt;br&gt;J(\theta_0,\theta_1,\cdots,\theta_j) =\frac{1}{2m}\sum_{i=1}^m(h_θ(x_0^{(i)},x_1^{(i)},\cdots,x_j^{(i)}) - y^{(j)})^2=\frac{1}{2m}\sum_{i=1}^n(\sum_{j=1}^m\theta_jx_j^{(i)}-y^{(i)})^2&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;对损失函数求偏导，更新参数$\theta$：&lt;br&gt;$$&lt;br&gt;\theta = \theta-\alpha X^T(\theta X-Y)&lt;br&gt;$$&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>chapter1-统计学习与深度学习方法概论</title>
    <link href="http://yoursite.com/2019/11/19/chapter1-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%A6%82%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/11/19/chapter1-统计学习与深度学习方法概论/</id>
    <published>2019-11-19T12:13:13.000Z</published>
    <updated>2019-12-09T10:38:03.437Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;chapter1-统计学习方法与深度学习方法概论&quot;&gt;&lt;a href=&quot;#chapter1-统计学习方法与深度学习方法概论&quot; class=&quot;headerlink&quot; title=&quot;chapter1-统计学习方法与深度学习方法概论&quot;&gt;&lt;/a&gt;chapter1-统计学习方法与深度学习方法概论&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;h6 id=&quot;什么是统计学-statistics-learning&quot;&gt;&lt;a href=&quot;#什么是统计学-statistics-learning&quot; class=&quot;headerlink&quot; title=&quot;什么是统计学(statistics learning)&quot;&gt;&lt;/a&gt;什么是统计学(statistics learning)&lt;/h6&gt;&lt;p&gt;​       统计学习是关于计算机基于数据构建概率统计模型并运用模型对数据进行分析与预测的一门学科。统计学习包括监督学习、非监督学习、半监督学习和强化学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h6 id=&quot;统计学三要素&quot;&gt;&lt;a href=&quot;#统计学三要素&quot; class=&quot;headerlink&quot; title=&quot;统计学三要素&quot;&gt;&lt;/a&gt;统计学三要素&lt;/h6&gt;&lt;p&gt;​                                                        方法 = 模型 + 策略 + 算法&lt;/p&gt;
&lt;p&gt;​      模型、策略 、算法三要素是理解统计学习中，起到提纲挈领的作用。&lt;/p&gt;
&lt;p&gt;​      模型(model)：亦为假设空间(hypothesis),包含所有可能的概率分布或者决策函数。&lt;/p&gt;
&lt;p&gt;​      策略(strategy): 亦为评价准则(evaluation  criterion)，评价模型经验风险最小化与结构风险最小化。不同模型有不同的风险函数&lt;/p&gt;
&lt;p&gt;​      算法(algorithm): 学习模型的具体计算方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="algorithms" scheme="http://yoursite.com/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>statistics algorithms learning</title>
    <link href="http://yoursite.com/2019/11/15/statistics-algorithms-learning/"/>
    <id>http://yoursite.com/2019/11/15/statistics-algorithms-learning/</id>
    <published>2019-11-15T08:52:59.000Z</published>
    <updated>2019-11-19T12:13:42.235Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/fengdu78/lihang-code&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;李航统计学代码实现&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;李航-统计学与吴恩达-深度学习理论与代码实践&quot;&gt;&lt;a href=&quot;#李航-统计学与吴恩达-深度学习理论与代码实践&quot; class=&quot;headerlink&quot; title=&quot;李航-统计学与吴恩达-深度学习理论与代码实践&quot;&gt;&lt;/a&gt;李航-统计学与吴恩达-深度学习理论与代码实践&lt;/h2&gt;&lt;h3 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;h5 id=&quot;统计学习方法与深度学习概论-最小二乘法完整实践理论-感知机-统计学与深度学习中的回归&quot;&gt;&lt;a href=&quot;#统计学习方法与深度学习概论-最小二乘法完整实践理论-感知机-统计学与深度学习中的回归&quot; class=&quot;headerlink&quot; title=&quot;统计学习方法与深度学习概论     最小二乘法完整实践理论    感知机    统计学与深度学习中的回归&quot;&gt;&lt;/a&gt;统计学习方法与深度学习概论     最小二乘法完整实践理论    感知机    统计学与深度学习中的回归&lt;/h5&gt;&lt;h5 id=&quot;支持向量机-FM与FFM…-k近邻算法-决策树-随机森林-极限树-提升算法-xgboost&quot;&gt;&lt;a href=&quot;#支持向量机-FM与FFM…-k近邻算法-决策树-随机森林-极限树-提升算法-xgboost&quot; class=&quot;headerlink&quot; title=&quot;支持向量机    FM与FFM…    k近邻算法    决策树    随机森林    极限树    提升算法    xgboost&quot;&gt;&lt;/a&gt;支持向量机    FM与FFM…    k近邻算法    决策树    随机森林    极限树    提升算法    xgboost&lt;/h5&gt;&lt;h5 id=&quot;lightgbm-catboost-EM算法以及推广-朴素贝叶斯-循环神经网络-隐尔马可夫模型&quot;&gt;&lt;a href=&quot;#lightgbm-catboost-EM算法以及推广-朴素贝叶斯-循环神经网络-隐尔马可夫模型&quot; class=&quot;headerlink&quot; title=&quot;lightgbm    catboost    EM算法以及推广    朴素贝叶斯    循环神经网络    隐尔马可夫模型&quot;&gt;&lt;/a&gt;lightgbm    catboost    EM算法以及推广    朴素贝叶斯    循环神经网络    隐尔马可夫模型&lt;/h5&gt;&lt;h5 id=&quot;卷积神经网络-条件随机场-监督学习方法总结-无监督学习概论-强化学习&quot;&gt;&lt;a href=&quot;#卷积神经网络-条件随机场-监督学习方法总结-无监督学习概论-强化学习&quot; class=&quot;headerlink&quot; title=&quot;卷积神经网络    条件随机场    监督学习方法总结    无监督学习概论    强化学习&quot;&gt;&lt;/a&gt;卷积神经网络    条件随机场    监督学习方法总结    无监督学习概论    强化学习&lt;/h5&gt;&lt;h5 id=&quot;autoML&quot;&gt;&lt;a href=&quot;#autoML&quot; class=&quot;headerlink&quot; title=&quot;autoML&quot;&gt;&lt;/a&gt;autoML&lt;/h5&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
      <category term="algorithms" scheme="http://yoursite.com/categories/python/algorithms/"/>
    
    
      <category term="statistics" scheme="http://yoursite.com/tags/statistics/"/>
    
  </entry>
  
  <entry>
    <title>vim技巧</title>
    <link href="http://yoursite.com/2019/11/09/vim%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/11/09/vim技巧/</id>
    <published>2019-11-09T06:38:42.000Z</published>
    <updated>2019-11-11T02:32:53.971Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fengyuhetao/shell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell脚本案列大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tinylab.org/open-shell-book/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell系列教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/formatting/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;goole-shell开发规范&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-vim总结技巧&quot;&gt;&lt;a href=&quot;#1-vim总结技巧&quot; class=&quot;headerlink&quot; title=&quot;1.vim总结技巧&quot;&gt;&lt;/a&gt;1.vim总结技巧&lt;/h2&gt;&lt;h4 id=&quot;vim键盘图&quot;&gt;&lt;a href=&quot;#vim键盘图&quot; class=&quot;headerlink&quot; title=&quot;vim键盘图&quot;&gt;&lt;/a&gt;vim键盘图&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/uploads/loading.gif&quot; data-original=&quot;https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-巧技" scheme="http://yoursite.com/categories/%E5%B7%A7%E6%8A%80/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>hive 脚本用户 and beeline</title>
    <link href="http://yoursite.com/2019/11/09/hive-%E8%84%9A%E6%9C%AC%E7%94%A8%E6%88%B7-and-beeline/"/>
    <id>http://yoursite.com/2019/11/09/hive-脚本用户-and-beeline/</id>
    <published>2019-11-09T05:57:26.000Z</published>
    <updated>2019-11-22T10:20:24.212Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;[https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline%E2%80%93NewCommandLineShell](https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-Beeline–NewCommandLineShell)&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HiveServer2 Clients&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;HiveServer2Clients简介&quot;&gt;&lt;a href=&quot;#HiveServer2Clients简介&quot; class=&quot;headerlink&quot; title=&quot;HiveServer2Clients简介&quot;&gt;&lt;/a&gt;HiveServer2Clients简介&lt;/h4&gt;&lt;h6 id=&quot;1-beeline是什么&quot;&gt;&lt;a href=&quot;#1-beeline是什么&quot; class=&quot;headerlink&quot; title=&quot;1.beeline是什么&quot;&gt;&lt;/a&gt;1.beeline是什么&lt;/h6&gt;&lt;p&gt;​    Beeline，是HiveServer2的JDBC客户端，基于SQLLine命令行接口。Beeline Shell可以工作在嵌入式模式和远程模式，在嵌入式模式中，它运行一个嵌入式的Hive（类似于Hive CLI），在远程模式中，通过Thrift连接到一个单独的HiveServer2进程，从Hive 0.14开始，当Beeline和HiveServer2一起使用时，它会从HiveServer2打印执行查询的日志信息到STDERR。建议在生产环境使用远程HiveServer2模式，因为这样更安全，不需要为用户授予直接的HDFS/Metastore访问权限&lt;/p&gt;
    
    </summary>
    
    
      <category term="hive" scheme="http://yoursite.com/categories/hive/"/>
    
    
  </entry>
  
  <entry>
    <title>linux菜鸟</title>
    <link href="http://yoursite.com/2019/11/05/linux%E8%8F%9C%E9%B8%9F/"/>
    <id>http://yoursite.com/2019/11/05/linux菜鸟/</id>
    <published>2019-11-05T08:26:36.000Z</published>
    <updated>2019-11-09T08:51:01.352Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;菜鸟-linux命令总结&quot;&gt;&lt;a href=&quot;#菜鸟-linux命令总结&quot; class=&quot;headerlink&quot; title=&quot;菜鸟-linux命令总结&quot;&gt;&lt;/a&gt;菜鸟-linux命令总结&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jaywcjlove/linux-command&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux命令大全教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://man.linuxde.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux搜索大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wangchujiang.com/linux-command/list.html#!kw=ls&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux命令搜索教程岚&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/judasn/Linux-Tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;linux安装教程-bigData&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fengyuhetao/shell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;shell脚本案列大全&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-命令大全&quot;&gt;&lt;a href=&quot;#1-命令大全&quot; class=&quot;headerlink&quot; title=&quot;1. 命令大全&quot;&gt;&lt;/a&gt;1. 命令大全&lt;/h4&gt;&lt;h5 id=&quot;文件传输&quot;&gt;&lt;a href=&quot;#文件传输&quot; class=&quot;headerlink&quot; title=&quot;文件传输&quot;&gt;&lt;/a&gt;文件传输&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bye、ftp、ftpcount、ftpshut、ftpwho、ncftp、tftp、uucico、uucp、uupick、uuto、scp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10设置电脑内网连接网线，外网连接wifi</title>
    <link href="http://yoursite.com/2019/11/04/Win10%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%84%91%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BA%BF%EF%BC%8C%E5%A4%96%E7%BD%91%E8%BF%9E%E6%8E%A5wifi/"/>
    <id>http://yoursite.com/2019/11/04/Win10设置电脑内网连接网线，外网连接wifi/</id>
    <published>2019-11-04T10:05:42.000Z</published>
    <updated>2019-12-16T11:35:32.968Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Win10设置电脑内网连接网线，外网连接wifi&quot;&gt;&lt;a href=&quot;#Win10设置电脑内网连接网线，外网连接wifi&quot; class=&quot;headerlink&quot; title=&quot;Win10设置电脑内网连接网线，外网连接wifi&quot;&gt;&lt;/a&gt;Win10设置电脑内网连接网线，外网连接wifi&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;win10一台电脑即可使用内网又可使用外网原理&lt;/p&gt;
&lt;p&gt;​    您可以把电脑比喻为一个路由器。就像打电话的移动服务器一样，一台服务器可以多个用户使用，就是因为每一个用户有专用的电话号码，然后通过中转服务器转到你所到达的属地，再到达相应的用用户。&lt;/p&gt;
&lt;p&gt;​    所以你就是用户，电脑就是中转器，你访问不同的页面，通过路由转到不同的网段，就可以使用相应的网络了。当然内网和外网是有优先级的。也就是说你访问的网页，优先使用哪一个网段。选取看你电脑哪一个网段是常用的。比如说我，外网常用，当然使用外网，并且外网的访问ip是很复杂的，分配网段比较复杂，分配内容比较容易。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="巧技" scheme="http://yoursite.com/categories/%E5%B7%A7%E6%8A%80/"/>
    
    
  </entry>
  
</feed>
